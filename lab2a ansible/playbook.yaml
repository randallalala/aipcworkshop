- name: Install MySQL
  hosts:  all
  become: yes # sudo
  vars:
    pkgs_to_install: [ 'unzip', 'libaio1','libtinf05' ]
    download_dir: /usr/local/opt
    mysql_archive: https://dev.mysql.com/get/Downloads/mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz
    mysql_archive_checksum: "md5:100a0e9336ef106a5fe90e6803b57066"
    mysql_dir: mysql-8.0.26-linux-glibc2.12-x86_64
    mysql_base_dir: /usr/local/opt/mysql

  tasks:

  - name: Install the following pkgs - unzip libai01 libtinf05
    apt: 
      update_cache: yes
      name: "{{ item }}"
      state: latest
    loop: "{{ pkgs_to_install }}"
    register: result
    until: result is not failed
    retries: 3
    delay: 5

  - name: dump
    debug:
      msg: "{{ result }}"

# create a group called MySQL
  - name: Ensure group "MySQL" exists
    group: 
      name: mysql
      state: present

# create a user call mysql add in to following groups - sudo and mysql
  - name: Add the user 'johnd' with a specific uid and a primary group of 'admin'
    user:
      name: mysql
      state: present
      groups: [ '', sudo ]
      append: yes #add to existing? or clear all others

# create a directory in /usr/local/opt
    # file:
    #   name: "{{ download_dir }}"
    #   state: directory
    #   mode: 0755

  - name: check archive if file is there
    stat:
      path: "{{ download_dir}}/{{ mysql_dir }}.tar.xz"

  # download the https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz into the above directory

  - name: download https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz
    get_url:
      url: "{{ mysql_archive }}"
      dest: "{{ download_dir }}"
      checksum: "{{ mysql_archive_checksum }}"
    when: not file.stat.exists

  - name: unzip usr/local/opt >> /usr/local/opt/mysql-8.0.26-linux-glibc2.12-x86_64.tar.xz
    unarchive:
      src: "{{ download_dir }}/{{ mysql_dir }}.tar.xz"
      dest: "{{download_dir }}"
      remote_src: yes
      creates: "{{ download_dir}}/{{ mysql_dir }}"

  # change all the files under usr/local/opt to be owned by mysql and group mysql
  - name: chagne all files
    file:
      path: "{{ download_dir }}"
      owner: mysql
      group: mysql
      recurse: yes #recursive - all inner folders

  # check if the file exists before downloading

  # unzip the archive  into dir  >> /opt/tmp/opt/mysql/mysql-8.0.26-linux-glibc2.12-i686

  - name:  craet a symbolic link
    file:
      src: "{{ download_dir }}/{{ mysql_dir }}"
      dest: "{{ download_dir }}/mysql"
      owner: mysql
      group: mysql
      state: link

  - name: Create a symlink to /usr/local/bin for mysql
    file:
      src: "{{ download_dir }}/{{ mysql_dir }}/bin/mysql"
      dest: "/usr/local/bin/mysql"
      state: link

  - name: generate my.cnf in etc/my.cnf
    template:
      src: ./my.cnf.j2
      dest: /etc/my.cnf

  - name: Initialize MySQL
    command:
      chdir: "{{ mysql_base_dir }}"
      argv: 
      - "bin/mysqld" 
      - --initialize 
      - --user=mysql
      creates: /var/lib/mysql
    register: output

  - name: MySQL initialize output - all
    debug:
      msg: "{{ output }}"

  - name: Extract the random password
    set_fact:
      generated_password: "{{ output.stderr_lines[-1].split(':')[-1] | trim }}"

  - name: Show password
    debug:
      msg: "Generated password: {{ generated_password }}"

  - name: Generate the service file
    template:
      src: ./mysql.service.j2
      dest: /lib/systemd/system/mysql.service
      mode: '0644'

  - name: Enable and start MySQL
    systemd:
      name: mysql
      daemon_reload: yes
      enabled: yes 
      state: started

  - name: generate  the sql script to change the root pw 
    template:
      src: ./change_root_password.sql.j2
      dest: "{{ download_dir }}/change_root_password.sql"
      mode: '0400'


  - name: cahge the root password
    shell:
      chdir: ./my.cnf.j2
      cmd: "bin/mysql -uroot -p'{{ generated_password}}' --connect-expired-password < {{ download_dir }}/change_root_password.sql"
